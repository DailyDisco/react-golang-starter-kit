# ============================================
# React + Go Starter Kit - Environment Variables
# ============================================

# ============================================
# CORE APPLICATION SETTINGS
# ============================================

# Server Configuration
# Port for the Go backend server
API_PORT=8080

# API Configuration
# URL of the backend API server (for frontend)
VITE_API_URL=http://localhost:8080

# Environment Configuration
# Enable debug mode for development
DEBUG=true
# Go environment setting
GO_ENV=development
# Node.js environment for frontend
NODE_ENV=development

# ============================================
# DATABASE CONFIGURATION
# ============================================

# PostgreSQL database connection details
DB_HOST=localhost
DB_PORT=5432
DB_USER=devuser
DB_PASSWORD=devpass
DB_NAME=devdb
DB_SSLMODE=require

# Alternative Railway PostgreSQL variables (Railway provides these automatically)
# PGHOST=your-railway-host
# PGPORT=5432
# PGUSER=your-railway-user
# PGPASSWORD=your-railway-password
# PGDATABASE=your-railway-database

# ============================================
# AUTHENTICATION & SECURITY
# ============================================

# JWT Configuration
# Secret key for JWT token signing (use a strong, random key in production)
JWT_SECRET=dev-jwt-secret-key-for-development-only

# Optional: JWT expiration time in hours (default: 24)
JWT_EXPIRATION_HOURS=24

# ============================================
# API & CORS CONFIGURATION
# ============================================

# CORS Configuration
# Comma-separated list of allowed origins for CORS
# Use "*" for development, specify exact URLs for production
CORS_ALLOWED_ORIGINS=http://localhost:3000,http://localhost:5173,http://localhost:5174,http://localhost:8080,http://frontend:5173

# ============================================
# RATE LIMITING CONFIGURATION
# ============================================

# Enable/Disable Rate Limiting
# Set to false to disable all rate limiting
RATE_LIMIT_ENABLED=true

# General API Rate Limiting (applies to most /api/* endpoints)
# Number of requests allowed per time window
RATE_LIMIT_GENERAL_REQUESTS=100
# Time window for general requests (e.g., "1m", "5m", "1h")
RATE_LIMIT_GENERAL_WINDOW=1m

# Authentication Rate Limiting (stricter limits for auth endpoints)
# Number of requests allowed per time window for auth endpoints
RATE_LIMIT_AUTH_REQUESTS=5
# Time window for auth requests (e.g., "1m", "5m", "1h")
RATE_LIMIT_AUTH_WINDOW=1m

# Public Rate Limiting (more lenient for public endpoints)
# Number of requests allowed per time window for public endpoints
RATE_LIMIT_PUBLIC_REQUESTS=1000
# Time window for public requests (e.g., "1h", "24h")
RATE_LIMIT_PUBLIC_WINDOW=1h

# ============================================
# LOGGING CONFIGURATION
# ============================================

# Core settings
LOG_ENABLED=true
LOG_LEVEL=info

# User context and body logging
LOG_INCLUDE_USER_CONTEXT=true
LOG_INCLUDE_REQUEST_BODY=false
LOG_INCLUDE_RESPONSE_BODY=false

# Size limits
LOG_MAX_REQUEST_BODY_SIZE=4096
LOG_MAX_RESPONSE_BODY_SIZE=4096

# Performance
LOG_SAMPLING_RATE=1.0
LOG_ASYNC=false

# Security
LOG_SANITIZE_HEADERS=true
LOG_FILTER_SENSITIVE_DATA=true
LOG_ALLOWED_HEADERS=accept,content-type,user-agent,x-request-id

# Output
LOG_TIME_FORMAT=2006-01-02T15:04:05Z07:00
LOG_PRETTY=true

# ============================================
# EXTERNAL SERVICES & INTEGRATIONS
# ============================================

# Email Service (AWS SES, Google SMTP, etc.)
# EMAIL_FROM=noreply@yoursite.com
# SMTP Service (Resend, AWS SES, Google SMTP, etc.)
# SMTP_HOST=your-smtp-host
# SMTP_PORT=your-smtp-port
# SMTP_USER=your-smtp-user
# SMTP_PASSWORD=your-smtp-password
# SMTP_FROM=noreply@yoursite.com

# Payment Processing (Stripe, PayPal, etc.)
# STRIPE_SECRET_KEY=sk_test_your-stripe-secret-key
# STRIPE_PUBLISHABLE_KEY=pk_test_your-stripe-publishable-key
# PAYPAL_CLIENT_ID=your-paypal-client-id
# PAYPAL_CLIENT_SECRET=your-paypal-client-secret

# File Storage + (AWS S3, Cloudinary, etc.)
# AWS_ACCESS_KEY_ID=your-aws-access-key
# AWS_SECRET_ACCESS_KEY=your-aws-secret-key
# AWS_REGION=us-east-1
# S3_BUCKET_NAME=your-bucket-name

# AI/ML Services (Google AI, OpenAI, etc.)
# GOOGLE_AI_API_KEY=your-google-ai-api-key
# GEMINI_MODEL=gemini-2.5-flash-lite

# ============================================
# DEVELOPMENT & DEPLOYMENT NOTES
# ============================================

# SETUP INSTRUCTIONS
# 1. Copy this file to .env in the project root
# 2. Update all values with your actual configuration
# 3. NEVER commit .env files to version control
# 4. Use strong, unique passwords and secrets in production

# PRODUCTION CONSIDERATIONS
# - Use environment-specific .env files
# - Store secrets securely (AWS Secrets Manager, Vault, etc.)
# - Use HTTPS URLs for CORS_ALLOWED_ORIGINS
# - Consider using shorter JWT expiration times
# - Enable SSL for database connections in production

# DEPLOYMENT SPECIFIC SETTINGS
# For Vercel deployment:
# - Set VITE_API_URL to your Railway backend URL: https://your-app.up.railway.app
# - Set CORS_ALLOWED_ORIGINS to your Vercel frontend URL: https://your-app.vercel.app

# For Railway deployment:
# - Railway automatically provides database variables (PGHOST, etc.)
# - Set CORS_ALLOWED_ORIGINS to your frontend URL
# - JWT_SECRET should be set in Railway environment variables

name: React CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master
  workflow_dispatch:

# Cancel in-progress runs for the same workflow and branch
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  NODE_VERSION: '20'
  WORKING_DIR: ./frontend

jobs:
  # Security and quality checks that run fast
  security:
    name: Security Audit
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run npm audit
        run: npm audit --audit-level=moderate
        working-directory: ${{ env.WORKING_DIR }}
        continue-on-error: true

      - name: Run security scan with npm audit fix suggestions
        run: |
          if npm audit --audit-level=moderate; then
            echo "✅ No security vulnerabilities found"
          else
            echo "⚠️  Security vulnerabilities detected. Consider running 'npm audit fix'"
            npm audit --audit-level=moderate || true
          fi
        shell: bash
        working-directory: ${{ env.WORKING_DIR }}

  lint:
    name: Lint & Type Check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.WORKING_DIR }}

      - name: Check formatting
        run: npm run prettier:check
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run type checking
        run: npm run typecheck
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run linting (if configured)
        run: |
          if npm run lint --silent 2>/dev/null; then
            npm run lint
          else
            echo "ℹ️  No lint script configured"
          fi
        shell: bash
        working-directory: ${{ env.WORKING_DIR }}
        continue-on-error: true

  # Frontend testing
  test:
    name: Frontend Tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.WORKING_DIR }}

      - name: Run tests (fast mode)
        run: npm run test:fast
        working-directory: ${{ env.WORKING_DIR }}

  # Build job that depends on successful tests
  build:
    name: Build
    runs-on: ubuntu-latest
    needs: [security, lint, test]
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Install dependencies
        run: npm ci
        working-directory: ${{ env.WORKING_DIR }}

      - name: Build frontend
        run: npm run build
        working-directory: ${{ env.WORKING_DIR }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: frontend-build
          path: ${{ env.WORKING_DIR }}/build/
          retention-days: 30

      - name: Upload build stats
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-stats
          path: |
            ${{ env.WORKING_DIR }}/build/static/js/*.js.map
            ${{ env.WORKING_DIR }}/build/static/css/*.css.map
          retention-days: 7
